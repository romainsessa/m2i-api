name: CI CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: #allow to manually run the workflow

jobs:
  tests:  # this first job is dedicated to tests (execution and report)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml 
    - name: Upload Jacoco Site 
      uses: actions/upload-artifact@v4 # GitHub Action that allow to upload on the pipeline result a file or a directory
      with:
        name: jacoco-report
        path: ${{ github.workspace }}/target/site/jacoco
    - name: Generate JaCoCo Badge
      uses: cicirello/jacoco-badge-generator@v2
      with:
        generate-branches-badge: true
    - name: Log coverage percentage
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"
    - name: Commit the Jacoco badge (if it changed) # the generated badges have to be committed in order to be available on the readme.md file
      run: |
        if [[ `git status --porcelain *.svg` ]]; then
          git config --global user.name 'romainsessa'
          git config --global user.email 'romainsessa@users.noreply.github.com'
          git add *.svg
          git commit -m "Autogenerated JaCoCo coverage badge"
          git push
        fi
  code_quality: # this second job is used to analyse the code quality and to stop the pipeline if the result is not valid
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Execute sonar maven plugin
      run: mvn clean verify sonar:sonar -Dsonar.token=$SONAR_TOKEN -Dsonar.qualitygate.wait=true # sonar have to be configured on the pom.xml
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # this secret have to be configure on the GitHuB project settings
  docker-deploy:
    runs-on: ubuntu-latest
    needs: code_quality
    steps:
    - uses: actions/checkout@v4
    #- name: Set up JDK 21
    #  uses: actions/setup-java@v4
    #  with:
    #    java-version: '21'
    #    distribution: 'temurin'
    #    cache: maven
    #- name: Build with Maven
    #  run: mvn -B package --file pom.xml
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        tags: romainsessa/m2i-api:latest
